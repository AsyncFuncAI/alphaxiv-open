[build]
builder = "nixpacks"

[deploy]
startCommand = "cd $RAILWAY_VOLUME_MOUNT_PATH"
restartPolicyType = "on-failure"
restartPolicyMaxRetries = 10

[volumes]
data = "/app/data"

[[services]]
name = "lightrag"
dockerfilePath = "Dockerfile.lightrag"
startCommand = "python start_minirag.py"
envs = [
  { name = "OPENAI_API_KEY", sync = true },
  { name = "MINIRAG_HOST", value = "0.0.0.0" },
  { name = "MINIRAG_PORT", value = "9721" },
  { name = "MINIRAG_EMBEDDING_BINDING", value = "openai" },
  { name = "MINIRAG_EMBEDDING_MODEL", value = "text-embedding-3-small" },
  { name = "EMBEDDING_BATCH_NUM", value = "32" },
  { name = "EMBEDDING_FUNC_MAX_ASYNC", value = "16" }
]
volumeMounts = [
  { local = "data", mountPath = "/app/data" }
]
healthcheck = { path = "/health", interval = "30s", timeout = "10s" }

[[services]]
name = "api"
dockerfilePath = "Dockerfile.api"
startCommand = "uvicorn app.main:app --host 0.0.0.0 --port 8000"
envs = [
  { name = "GOOGLE_API_KEY", sync = true },
  { name = "OPENAI_API_KEY", sync = true },
  { name = "GEMINI_MODEL", value = "gemini-2.0-flash-001" },
  { name = "MINIRAG_HOST", value = "${{ services.lightrag.address }}" },
  { name = "MINIRAG_PORT", value = "9721" }
]
volumeMounts = [
  { local = "data", mountPath = "/app/data" }
]

[[services]]
name = "frontend"
dockerfilePath = "Dockerfile.frontend"
startCommand = "npm start"
envs = [
  { name = "NEXT_PUBLIC_API_URL", value = "${{ services.api.RAILWAY_PUBLIC_DOMAIN }}" }
]
